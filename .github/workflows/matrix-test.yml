# It sets up the appropriate environment, installs dependencies, and executes the test suite.
# The workflow ensures code quality and prevents regressions by verifying that all tests pass before merging changes.

# matrix-test.yml
name: Matrix Test

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'

concurrency:
  group: matrix-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18.x, 20.x]
        rust-version: [1.67.1]
        dfx-version: [0.9.0]
        exclude:
          - os: windows-latest
            dfx-version: 0.9.0
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust-version }}
          override: true
          profile: minimal

      - name: Cache Cargo registry and target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/target
          key: ${{ runner.os }}-cargo-${{ matrix.rust-version }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache DFX
        uses: actions/cache@v4
        with:
          path: ~/.cache/dfinity
          key: ${{ runner.os }}-dfx-${{ matrix.dfx-version }}

      - name: Install DFX
        run: |
          sh -ci "DFX_VERSION=${{ matrix.dfx-version }} dfx install"

      - name: Install Node dependencies
        run: npm ci

      - name: Run Rust tests
        run: cargo test --all --verbose

      - name: Run DFX tests
        run: dfx test --network ic

      - name: Run Node tests
        run: npm test
