# This workflow automates tasks based on specific triggers and conditions.
# It defines jobs that run on specified runners and can include steps such as
# checking out code, setting up environments, running scripts, and deploying artifacts.
# Customize the workflow by editing triggers, jobs, and steps to fit your project's needs.

# release.yml
name: Release

on:
  push:
    tags: ['v[0-9]*.*.*']
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g. v1.2.3)'
        required: true
        default: ''

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-artifacts:
    runs-on: ubuntu-latest
    outputs:
      dist_path: ${{ steps.zip.outputs.dist_path }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'npm'

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.67.1
          override: true

      - name: Cache Cargo registry and target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/target
          key: build-artifacts-cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Zip dist folder
        id: zip
        run: |
          zip -r dist.zip ./dist
          echo "dist_path=dist.zip" >> $GITHUB_OUTPUT
          
      - name: Upload dist artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist.zip

      - name: Publish to NPM
        run: npm publish --access public

      - name: Publish to crates.io
        env:
          CARGO_TOKEN: ${{ secrets.CARGO_TOKEN }}
        run: cargo publish --token $CARGO_TOKEN

      - name: Deploy DFX canisters
        run: dfx deploy --network ic --no-wallet

  create-release:
    needs: build-artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download dist.zip from previous job
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: .

      - name: Generate changelog
        id: changelog
        run: |
          echo "notes=$(npx auto-changelog --unreleased --template keepachangelog)" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: gh_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          body: |
            ${{ steps.changelog.outputs.notes }}
            Released on $(date -u +"%Y-%m-%dT%H:%M:%SZ")

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}