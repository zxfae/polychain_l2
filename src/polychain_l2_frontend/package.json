{
  "name": "polychain_l2_frontend",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "setup": "npm i && dfx canister create polychain_l2_backend && dfx generate polychain_l2_backend && dfx deploy",
    "start": "vite --port 3000",
    "prebuild": "dfx generate || (echo 'DFX not available, creating fallback declarations' && mkdir -p src/declarations/polychain_l2_backend && echo 'export const polychain_l2_backend = { greet: (name) => Promise.resolve(`Hello, ${name}!`), get_balance: (address) => Promise.resolve(1000.0), create_transaction: (sender, recipient, amount) => Promise.resolve(`Transaction created from ${sender} to ${recipient} for ${amount}`) };' > src/declarations/polychain_l2_backend/index.js && echo 'export interface polychain_l2_backend { greet: (name: string) => Promise<string>; get_balance: (address: string) => Promise<number>; create_transaction: (sender: string, recipient: string, amount: number) => Promise<string>; } export const polychain_l2_backend: polychain_l2_backend;' > src/declarations/polychain_l2_backend/index.d.ts)",
    "build": "tsc && vite build",
    "format": "prettier --write \"src/**/*.{json,js,jsx,ts,tsx,css,scss}\"",
    "lint": "tsc --noEmit",
    "test": "tsc --noEmit",
    "test:integration": "echo 'Integration tests not implemented yet' && exit 0"
  },
  "dependencies": {
    "@dfinity/agent": "^2.1.3",
    "@dfinity/candid": "^2.1.3",
    "@dfinity/principal": "^2.1.3",
    "lucide-react": "^0.525.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.14",
    "@types/react-dom": "^18.2.6",
    "@vitejs/plugin-react": "^4.0.1",
    "dotenv": "^16.3.1",
    "sass": "^1.63.6",
    "typescript": "^5.1.3",
    "vite": "^4.3.9",
    "vite-plugin-environment": "^1.1.3"
  }
}
